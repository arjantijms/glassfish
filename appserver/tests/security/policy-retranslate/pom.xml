<?xml version="1.0" encoding="UTF-8"?>

<!--

    Copyright (c) 2021, 2025 Contributors to the Eclipse Foundation.

    This program and the accompanying materials are made available under the
    terms of the Eclipse Public License v. 2.0, which is available at
    http://www.eclipse.org/legal/epl-2.0.

    This Source Code may also be made available under the following Secondary
    Licenses when the conditions for such availability set forth in the
    Eclipse Public License v. 2.0 are satisfied: GNU General Public License,
    version 2 with the GNU Classpath Exception, which is available at
    https://www.gnu.org/software/classpath/license.html.

    SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0

-->

<project xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.glassfish.main.tests.security</groupId>
        <artifactId>security</artifactId>
        <version>8.0.0-SNAPSHOT</version>
    </parent>
    
    <artifactId>security-policy-retranslate</artifactId>
    <packaging>war</packaging>
    
    <name>Security Policy Retranslate</name>
    <description>
        The example app used Jakarta REST, where in GF Jersey dynamically adds a Servlet.
        
        This action triggers policy retranslate. In the REST resource we use get caller principal
        from the security context, which on its turn depends upon the request set by authorization.
        
        If the retranslate setup doesn't clear the previous translation, we will not get to see
        this request and hence not the principal.
    </description>

    <dependencies>
        <dependency>
            <groupId>jakarta.platform</groupId>
            <artifactId>jakarta.jakartaee-api</artifactId>
            <version>11.0.0</version>
            <scope>provided</scope>
        </dependency>
        
        <!-- Junit 5 -->
        <dependency>
            <groupId>org.jboss.arquillian.junit5</groupId>
            <artifactId>arquillian-junit5-container</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.shrinkwrap</groupId>
            <artifactId>shrinkwrap-api</artifactId>
        </dependency>
        <dependency>
            <groupId>org.jboss.shrinkwrap</groupId>
            <artifactId>shrinkwrap-impl-base</artifactId>
        </dependency>

        <!--
            The Arquillian connector that starts GlassFish and deploys archives to it.
        -->
        <dependency>
            <groupId>ee.omnifish.arquillian</groupId>
            <artifactId>arquillian-glassfish-server-managed</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <finalName>${project.artifactId}</finalName>
        <plugins>
            <plugin>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>3.8.1</version>
                <executions>
                    <execution>
                        <id>unpack-glassfish</id>
                        <goals>
                            <goal>unpack</goal>
                        </goals>
                        <phase>test-compile</phase>
                        <configuration>
                            <markersDirectory>${glassfish.root}/dependency-maven-plugin-markers</markersDirectory>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>org.glassfish.main.distributions</groupId>
                                    <artifactId>glassfish</artifactId>
                                    <type>zip</type>
                                    <overWrite>true</overWrite>
                                    <outputDirectory>${glassfish.root}</outputDirectory>
                                </artifactItem>
                            </artifactItems>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            
            <plugin>
                <artifactId>maven-failsafe-plugin</artifactId>
                <executions>
                    <execution>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <systemPropertyVariables>
                        <finalName>${project.build.finalName}</finalName>
                        <glassfish.home>${glassfish.root}/glassfish8</glassfish.home>

                        <!-- Create the users for the various security (authentication tests) -->
                        <glassfish.postBootCommands>
                            --passwordfile ${project.basedir}/javajoe.pass create-file-user --groups api-user:viewer javajoe
                        </glassfish.postBootCommands>
                    </systemPropertyVariables>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>

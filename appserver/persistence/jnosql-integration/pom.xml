<?xml version="1.0" encoding="UTF-8"?>
<!--
~
~  Copyright (c) 2024, 2025 Contributors to the Eclipse Foundation
~   All rights reserved. This program and the accompanying materials
~   are made available under the terms of the Eclipse Public License v1.0
~   and Apache License v2.0 which accompanies this distribution.
~   The Eclipse Public License is available at http://www.eclipse.org/legal/epl-v10.html
~   and the Apache License v2.0 is available at http://www.opensource.org/licenses/apache2.0.php.
~
~   You may elect to redistribute this code under either of these licenses.
~
~   Contributors:
~
~   Ondro Mihalyi
~   Arjan Tijms
~
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.glassfish.main.persistence</groupId>
        <artifactId>persistence</artifactId>
        <version>8.0.0-SNAPSHOT</version>
    </parent>
    
    <artifactId>jnosql-jakarta-persistence-integration</artifactId>
    <packaging>glassfish-jar</packaging>

    <name>Eclipse JNoSQL Jakarta Persistence Integration</name>
    
    <properties>
        <persistence.osgi.bundle.classpath>${project.build.directory}/dependencies/jnosql-jakarta-persistence-${jnosql.version}.jar${path.separator}${project.build.directory}/dependencies/jnosql-mapping-core-${jnosql.version}.jar${path.separator}${project.build.directory}/dependencies/jnosql-mapping-api-core-${jnosql.version}.jar${path.separator}${project.build.directory}/dependencies/jnosql-communication-core-${jnosql.version}.jar</persistence.osgi.bundle.classpath>
    </properties>

    <dependencies>
        <dependency>
            <groupId>jakarta.enterprise</groupId>
            <artifactId>jakarta.enterprise.cdi-api</artifactId>
        </dependency>
        <dependency>
            <groupId>ee.omnifish</groupId>
            <artifactId>jnosql-jakarta-persistence-osgi-bundle</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>*</groupId>
                    <artifactId>*</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>jakarta.data</groupId>
            <artifactId>jakarta.data-api</artifactId>
        </dependency>
        <dependency>
            <groupId>jakarta.persistence</groupId>
            <artifactId>jakarta.persistence-api</artifactId>
        </dependency>
        <dependency>
            <groupId>jakarta.nosql</groupId>
            <artifactId>jakarta.nosql-api</artifactId>
        </dependency>
        <dependency>
            <groupId>org.glassfish.main.common</groupId>
            <artifactId>glassfish-api</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>org.glassfish.main.common</groupId>
            <artifactId>internal-api</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>org.glassfish.hk2</groupId>
            <artifactId>hk2-core</artifactId>
        </dependency>
        <dependency>
            <groupId>org.glassfish.hk2</groupId>
            <artifactId>hk2-locator</artifactId>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-params</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <scope>test</scope>
        </dependency>
        <!-- do not commit the jnosql-jakarta-persistence, it's only for IDE to find the dependency -->
<!--        <dependency>
            <groupId>org.eclipse.jnosql.mapping</groupId>
            <artifactId>jnosql-jakarta-persistence</artifactId>
            <version>1.1.8-SNAPSHOT</version>
            <optional>true</optional>
        </dependency>-->
    </dependencies>

    <build>
        <plugins>
            <!-- add JARs embedded in the OSGi bundle dependency to the compile classpath -->
            <plugin>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>unpack-dependencies</id>
                        <goals>
                            <goal>unpack-dependencies</goal>
                        </goals>
                        <configuration>
                            <includeGroupIds>ee.omnifish</includeGroupIds>
                            <excludeTransitive>true</excludeTransitive>
                            <outputDirectory>${project.build.directory}/dependencies</outputDirectory>
                        </configuration>
                    </execution>
                    <execution>
                        <id>classpath</id>
                        <goals>
                            <goal>build-classpath</goal>
                        </goals>
                        <configuration>
                            <includeScope>compile</includeScope>
                            <outputProperty>compile.classpath</outputProperty>
                        </configuration>
                    </execution>
                    <execution>
                        <id>testclasspath</id>
                        <goals>
                            <goal>build-classpath</goal>
                        </goals>
                        <configuration>
                            <includeScope>test</includeScope>
                            <outputProperty>test.classpath</outputProperty>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <executions>
                    <execution>
                        <id>default-testCompile</id>
                        <configuration>
                            <compilerArgs>
                                <arg>-cp</arg>
                                <arg>${test.classpath}${path.separator}${project.build.outputDirectory}${path.separator}${persistence.osgi.bundle.classpath}</arg>
                            </compilerArgs>
                        </configuration>
                    </execution>
                    <execution>
                        <id>default-cli</id>
                        <configuration>
                            <compilerArgs>
                                <arg>-cp</arg>
                                <arg>${test.classpath}${path.separator}${project.build.outputDirectory}${path.separator}${persistence.osgi.bundle.classpath}</arg>
                            </compilerArgs>
                        </configuration>
                    </execution>
                </executions>
                <configuration>
                    <compilerArgs>
                        <arg>-cp</arg>
                        <arg>${compile.classpath}${path.separator}${persistence.osgi.bundle.classpath}</arg>
                    </compilerArgs>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <additionalClasspathElements>
                        <additionalClasspathElement>${project.build.directory}/dependencies/jnosql-jakarta-persistence-${jnosql.version}.jar</additionalClasspathElement>
                        <additionalClasspathElement>${project.build.directory}/dependencies/jnosql-mapping-core-${jnosql.version}.jar</additionalClasspathElement>
                        <additionalClasspathElement>${project.build.directory}/dependencies/jnosql-mapping-api-core-${jnosql.version}.jar</additionalClasspathElement>
                        <additionalClasspathElement>${path.separator}${project.build.directory}/dependencies/jnosql-communication-core-${jnosql.version}.jar</additionalClasspathElement>
                    </additionalClasspathElements>
                </configuration>
             </plugin>

            <!-- Creates the OSGi MANIFEST.MF file -->
            <plugin>
                <groupId>org.apache.felix</groupId>
                <artifactId>maven-bundle-plugin</artifactId>
                <configuration>
                    <instructions>
                        <_noimportjava>true</_noimportjava>
                        <_runee>JavaSE-17</_runee>
                        
                        <Import-Package>
                            org.eclipse.jnosql.communication,
                            *
                        </Import-Package>
                        <Export-Package>
                            *
                        </Export-Package>
                    </instructions>
                </configuration>
                <executions>
                    <execution>
                        <id>bundle-manifest</id>
                        <phase>process-classes</phase>
                        <goals>
                            <goal>manifest</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- Adds the manifest file created by the org.apache.felix:maven-bundle-plugin -->
            <plugin>
                <artifactId>maven-jar-plugin</artifactId>
                <version>3.4.2</version>
                <configuration>
                    <archive>
                        <manifestFile>${project.build.outputDirectory}/META-INF/MANIFEST.MF</manifestFile>
                    </archive>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>dev</id>
            <properties>
                <copy.modules.to.distribution.skip>false</copy.modules.to.distribution.skip>
            </properties>
        </profile>
    </profiles>
</project>
